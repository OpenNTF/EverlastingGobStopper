'++LotusScript Development Environment:2:5:(Options):0:66
Option Public

'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Sub MainFormOpen(objDocument As NotesDocument)
Declare Function  STRExplode( Byval strValue As String, strDelimiter As String, bBlanks As Variant) As Variant
Declare Function ParseAllLists(ListType As String)
Declare Sub ParseEach(GetList As Variant)

'++LotusScript Development Environment:2:5:(Declarations):0:10
Dim strTemp As String
Dim strValues() As String
Dim iPlace As Integer
Dim iValueCount As Integer
Dim sdebugname As String
Dim returnValues As Variant

Dim objDoc As NotesDocument

Dim NameValue As String
Dim i As Integer
Dim sdelimiter As String

Dim UNameList As Integer

Dim UActionList As Integer
Dim UA_CrDoc As Integer
Dim UA_DlDoc As Integer
Dim UA_PerAg As Integer
Dim UA_PerFld As Integer
Dim UA_ShrFld As Integer
Dim UA_LscAg As Integer
Dim UA_RdPub As Integer
Dim UA_WrPub As Integer

Dim URoleList As Integer
Dim UTypeList As Integer

Dim UBoundList As Integer
Dim ManagerList As Variant
Dim DesignerList As Variant
Dim EditorList As Variant
Dim AuthorList As Variant
Dim ReaderList As Variant
Dim DepositorList As Variant
Dim NoAccessList As Variant

Dim NameList As Variant	
Dim ActionList As Variant
Dim ActionVals As Variant
Dim A_CrDoc As Variant
Dim A_DlDoc As Variant
Dim A_PerAg As Variant
Dim A_PerFld As Variant
Dim A_ShrFld As Variant
Dim A_LscAg As Variant
Dim A_RdPub As Variant
Dim A_WrPub As Variant

Dim RoleList As Variant
Dim TypeList As Variant

'++LotusScript Development Environment:2:2:MainFormOpen:1:8
Sub MainFormOpen(objDocument As NotesDocument)
	Set objDoc = objDocument
	sdelimiter = "$%^"	
	Call ParseAllLists("Mgr")
	Call ParseAllLists("Des")
	Call ParseAllLists("Edi")
	Call ParseAllLists("Auth")
	Call ParseAllLists("Rdr")
	Call ParseAllLists("Dep")
	Call ParseAllLists("NA")
End Sub
'++LotusScript Development Environment:2:1:STRExplode:1:8
Function  STRExplode( Byval strValue As String, strDelimiter As String, bBlanks As Variant) As Variant
'** This function takes a string and converts it to an array, based on a delimiter
	
'** Parameters:
'**strValue- the string to explode
'**strDelimiter- the delimiter
'**bBlanks- a boolean value, pass true to have blanks placed in array when two delimiters have nothing between them
'**pass false to ignore the blanks
	
	Dim strTemp As String
	Dim strValues() As String
	Dim iPlace As Integer
	Dim idelimLen As Integer
	Dim iValueCount As Integer
	
	idelimLen = Len( strDelimiter)
	
	iPlace = Instr( strValue, strDelimiter)
	
	Do While iPlace <> 0
		
		If (iPlace <> 1 Or bBlanks) Then
			Redim Preserve strValues(iValueCount) As String
			strValues(iValueCount) = Left( strValue, iPlace - 1)
			iValueCount = iValueCount + 1
		End If
		
		strValue = Right( strValue, Len( strValue) - iPlace - idelimLen + 1)
		
		iPlace = Instr( strValue, strDelimiter)
		
	Loop 
	
	If Len( strValue ) <> 0 Or bBlanks Then
		Redim Preserve strValues(iValueCount) As String 
		strValues(iValueCount) = strValue
	Elseif iValueCount = 0 Then
		Redim Preserve strValues(iValueCount) As String
	End If
	
	STRExplode = strValues
	
End Function
'++LotusScript Development Environment:2:1:ParseAllLists:1:8
Function ParseAllLists(ListType As String)
	Dim vList As Variant
	Dim str1 As String
	Dim str2 As String
	
	str1 = ListType
	Select Case ListType
	Case Is = "Mgr"
		vList = objDoc.getitemvalue("ManagerList")
		str2 = "MA"
	Case Is = "Des"
		vList = objDoc.getitemvalue("DesignerList")
		str2 = "DS"
	Case Is = "Edi"
		vList = objDoc.getitemvalue("EditorList")
		str2 = "ED"
	Case Is = "Auth"
		vList = objDoc.getitemvalue("AuthorList")
		str2 = "AU"
	Case Is = "Rdr"
		vList = objDoc.getitemvalue("ReaderList")
		str2 = "RD"
	Case Is = "Dep"
		vList = objDoc.getitemvalue("DepositorList")
		str2 = "DP"
	Case Is = "NA"
		vList = objDoc.getitemvalue("NoAccessList")
		str2 = "NA"
	End Select
	If vList(0) = "" Then
		Exit Function
	End If
	UBoundList = Ubound(vList)
	
	Call ParseEach(vList)
	
	Call objDoc.ReplaceItemValue(str1 & "Names", NameList)
	Call objDoc.ReplaceItemValue(str1 & "Roles", RoleList)
	Call objDoc.ReplaceItemValue(str1 & "Types", TypeList)
	
	Call objDoc.ReplaceItemvalue(str2 & "1", A_CrDoc)
	Call objDoc.ReplaceItemvalue(str2 &"2", A_DlDoc)
	Call objDoc.replaceitemvalue(str2 & "3", A_PerAg)
	Call objDoc.replaceitemvalue(str2 & "4", A_PerFld)
	Call objDoc.replaceitemvalue(str2 & "5", A_ShrFld)
	Call objDoc.replaceitemvalue(str2 & "6", A_LscAg)
	Call objDoc.replaceitemvalue(str2 & "7", A_RdPub)
	Call objDoc.replaceitemvalue(str2 & "8", A_WrPub)
	
End Function

'++LotusScript Development Environment:2:2:ParseEach:1:8
Sub ParseEach(GetList As Variant)
	
'Determine how many items are in the list, and set an array with the upper bound	
	
	UNameList = UBoundList
	UActionList = UBoundList
	
	URoleList = UBoundList
	UTypeList = UBoundList
	UNameList = uNameList 
	UActionList = uActionList 
	
	URoleList = uRoleList 
	UTypeList = uTypeList 
	
'There are always going to be 8 actions
'Other list boundaries will differ depending upon the # of items in the list
	Redim ActionVals(7) As Variant
	Redim NameList(UNameList) As Variant	
	Redim ActionList(UActionList) As Variant
	Redim A_CrDoc(UBoundList) As Variant
	Redim A_DlDoc(UBoundList) As Variant
	Redim A_PerAg(UBoundList) As Variant
	Redim A_PerFld(UBoundList) As Variant
	Redim A_ShrFld(UBoundList) As Variant
	Redim A_LscAg(UBoundList) As Variant
	Redim A_RdPub(UBoundList) As Variant
	Redim A_WrPub(UBoundList) As Variant
	
	Redim RoleList(URoleList) As Variant
	Redim TypeList(UTypeList) As Variant
	
'Parse each of the items in the Name, Action, Role and Type lists
	i=0
	Forall x In GetList
		returnValues =  STRExplode(x,  sdelimiter$,  True)
		
		If Len(returnValues(0)) > 20 Then 
			NameList(i) = Mid(returnValues(0),1,20) + " ..."
		Else
			NameList(i) = returnValues(0)
		End If
		
		ActionList(i) = returnValues(1)
		RoleList(i) = returnValues(2)
		Select Case returnValues(3)
		Case Is = "6"
			TypeList(i)="Admin Server"
		Case Is = "5"
			TypeList(i)="Server Group"
		Case Is = "4"
			TypeList(i)="Person Group"
		Case Is = "3"
			TypeList(i)="Mixed Group"
		Case Is = "2"
			TypeList(i)="Server"
		Case Is = "1"
			TypeList(i)="Person"
		Case Else
			TypeList(i)="Unspecified"
		End Select
'		TypeList(i) = returnValues(3)
		i=i+1
	End Forall	
	
	Dim strvalue As String
	Dim actionstring As String
	
'Get a string of actions for each item in the list
	Forall y In ActionList
		i=0
		actionstring = y
		Do While i < 8
			strvalue = Left(actionstring,1)
			ActionVals(i) = ActionVals(i) + strvalue
			actionstring = Right(actionstring,7-i)
			i=i+1			
		Loop	
	End Forall	
	
'break out the action string into 8 different arrays, one for each Action field
	Dim ParseAct As Integer
	
	Forall z In ActionVals
		i=0
		actionstring = z
		Do Until i = UBoundList + 1
			strvalue = Left(actionstring,1)
			
			If A_CrDoc(i) = "" Then
				A_CrDoc(i) = strvalue
				Goto Continue
			Elseif A_DlDoc(i) = "" Then
				A_DlDoc(i) = strvalue
				Goto Continue
			Elseif A_PerAg(i) = "" Then
				A_PerAg(i) = strvalue
				Goto Continue
			Elseif A_PerFld(i) = "" Then
				A_PerFld(i) = strvalue
				Goto Continue
			Elseif A_ShrFld(i) = "" Then
				A_ShrFld(i) = strvalue
				Goto Continue
			Elseif A_LscAg(i) = "" Then
				A_LscAg(i) = strvalue
				Goto Continue
			Elseif A_RdPub(i) = "" Then
				A_RdPub(i) = strvalue
				Goto Continue
			Elseif A_WrPub(i) = "" Then
				A_WrPub(i) = strvalue
				Goto Continue
			End If
			
Continue:
			
			ParseAct = UBoundList - i
			If ParseAct = 0 Then
				actionstring = actionstring
			Else
				actionstring = Right(actionstring,ParseAct)
			End If
			
			i=i+1
		Loop
	End Forall
	
End Sub